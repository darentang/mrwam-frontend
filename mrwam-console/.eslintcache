[{"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/index.js":"1","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/App.js":"2","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/reportWebVitals.js":"3","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Connect.js":"4","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Main.js":"5","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Health.js":"6","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Schedule.js":"7","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Download.js":"8"},{"size":500,"mtime":1620649735230,"results":"9","hashOfConfig":"10"},{"size":1285,"mtime":1620663525736,"results":"11","hashOfConfig":"10"},{"size":362,"mtime":1620647893662,"results":"12","hashOfConfig":"10"},{"size":3142,"mtime":1620710146812,"results":"13","hashOfConfig":"10"},{"size":2276,"mtime":1620665026394,"results":"14","hashOfConfig":"10"},{"size":2425,"mtime":1620664273102,"results":"15","hashOfConfig":"10"},{"size":5532,"mtime":1620664266318,"results":"16","hashOfConfig":"10"},{"size":1978,"mtime":1620662226461,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"nvim0h",{"filePath":"21","messages":"22","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"23","usedDeprecatedRules":"20"},{"filePath":"24","messages":"25","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"28","messages":"29","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35","usedDeprecatedRules":"20"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/index.js",[],["38","39"],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/App.js",["40","41","42","43"],"import './App.css';\nimport React, { useEffect, useState, useContext } from \"react\";\n\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\n\nimport Connect from './components/Connect'\nimport Main from './components/Main'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\n\nfunction App() {\n  const [address, setAddress] = useState(null);\n  return(\n    <div>\n    <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\">\n      <Navbar.Brand>MrWAM Mission Console</Navbar.Brand>\n      <Navbar.Collapse className=\"justify-content-end\">\n          {(sessionStorage.getItem('api-host') == null) &&\n            <Navbar.Text>\n            Not Connected\n            </Navbar.Text>\n          }\n          {(sessionStorage.getItem('api-host') != null) &&\n            <div>\n              <Navbar.Text style={{'marginRight': '2vh'}}>\n                Connected to {sessionStorage.getItem('api-host')}\n              </Navbar.Text>\n            </div>\n          }\n      </Navbar.Collapse>\n    </Navbar>\n    <div className=\"main\">\n\n    {(sessionStorage.getItem('api-host') == null) &&\n        <Connect setAddress={setAddress} />\n    }\n    {(sessionStorage.getItem('api-host') != null) &&\n      \n        <Main/>\n        \n      }\n\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/reportWebVitals.js",[],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Connect.js",["44","45","46"],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Main.js",["47","48","49","50","51","52"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Container from 'react-bootstrap/Container';\nimport Tabs from 'react-bootstrap/Tabs';\nimport Tab from 'react-bootstrap/Tab';\nimport Modal from 'react-bootstrap/Modal'\nimport Health from './Health.js'\nimport Schedule from './Schedule.js'\nimport Download from './Download.js'\nimport moment from 'moment-timezone';\nimport {useForm} from 'react-hook-form';\n\n\nfunction Main() {\n    const {register, handleSubmit} = useForm();\n\n    const [key, setKey] = useState('health');\n    const [health, setHealth] = useState(null);\n    const [refresh, setRefresh] = useState(false);\n    const [schedule, setSchedule] = useState(null);\n    const [download, setDownload] = useState(null);\n\n    useEffect(() => {\n        if (key == 'health') {\n            fetch(sessionStorage.getItem('api-host')+'wod').then(response => response.json()).then((data)=>{\n                setHealth(data);\n            })\n        }\n\n        if (key == 'schedule') {\n            fetch(sessionStorage.getItem('api-host')+'list_schedule').then(response => response.json()).then((data)=>{\n                console.log(data);\n                setSchedule(data);\n            })\n        }\n\n        if (key == \"download\") {\n            fetch(sessionStorage.getItem('api-host')+'list_downloads').then(response => response.json()).then((data)=>{\n                console.log(data);\n                setDownload(data);\n            })\n        }\n    }, [key, refresh]);\n\n    return(\n        <Container>\n            <h5>Your Time Zone: {moment.tz.guess()}</h5>\n            <Tabs activeKey={key} onSelect={(k) => setKey(k)}>\n                <Tab eventKey=\"health\" title=\"Health\" className=\"tabContent\" default>\n                    <Health health={health} setKey={setKey}/>\n                </Tab>\n                <Tab eventKey=\"schedule\" title=\"Schedule\" className=\"tabContent\">\n                    <Schedule schedule={schedule} setRefresh={setRefresh} refresh={refresh}/>\n                </Tab>\n                <Tab eventKey=\"download\" title=\"Download\" className=\"tabContent\">\n                    <Download download={download}/>\n                </Tab>\n            </Tabs>\n            <Modal>\n\n            </Modal>\n        </Container>\n    );\n}\n\nexport default Main;","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Health.js",[],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Schedule.js",["53","54","55"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport moment from 'moment-timezone';\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\n\nimport {set, useForm} from 'react-hook-form';\n\n\nfunction Schedule(props) {\n    var schedule = props.schedule;\n    const {register, handleSubmit} = useForm();\n    const [date, onChangeDate] = useState(moment());\n    const [display, setDisplay] = useState(false);\n    const [message, setMessage] = useState('');\n\n    function submit(data) {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({lat: data.lat, lon: data.lon, time: date / 1000})\n        }\n        fetch(sessionStorage.getItem('api-host')+'add_job', requestOptions).then(response => response.json()).then((data)=>{\n            if (data.success) {\n                props.setRefresh(!props.refresh)\n                setDisplay(false);\n            } else {\n                setMessage(data.message);\n            }\n        })\n    }\n\n\n    return(\n        <div>\n                <h2>Job Schedule</h2>\n                {(schedule != null) &&\n                    <div>\n                    <Table striped bordered >\n                        <thead>\n                            <tr>\n                                <th>Job ID</th>\n                                <th>Target Latitude</th>\n                                <th>Target Longitude</th>\n                                <th>Imaging Time (Local Time)</th>\n                                <th>Completed</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {schedule.list.map((e, i) => {\n                                return(\n                                <tr key={i}>\n                                    <td>{e.id}</td>\n                                    <td>{e.lat}</td>\n                                    <td>{e.lon}</td>\n                                    <td>{moment.unix(e.time).format(\"DD/MM/YYYY HH:mm:ss\")}</td>\n                                    <td>\n                                        <p style={e.completed?{color: \"Green\"}:{color:\"Red\"}}>\n                                            {e.completed ? \"Yes\" : \"No\"}\n                                        </p>\n                                    </td>\n                                    <td>\n                                        <Button disabled={!e.completed} onClick={()=>{\n                                            window.open(sessionStorage.getItem('api-host')+'download?'+\n                                                new URLSearchParams({name: e.image_name})\n                                            );\n                                        }}>\n                                            Download Image\n                                        </Button>\n                                    </td>\n                                    <td>\n                                        <Button variant=\"danger\" onClick={()=>{\n                                            fetch(sessionStorage.getItem('api-host')+'delete_job?'+\n                                                new URLSearchParams({id: e.id})\n                                            ).then(props.setRefresh(!props.refresh));\n                                        }}>\n                                            Delete\n                                        </Button>\n                                    </td>\n                                </tr>\n                                );\n                            })\n                            }\n                            \n                        </tbody>\n                    </Table>\n                    <Button onClick={()=>{setDisplay(true)}}>\n                            Add\n                    </Button>\n                    </div>\n                }\n            <Modal show={display} onHide={()=>{setDisplay(false)}}>\n                <Form onSubmit={handleSubmit(submit)}>\n                <Modal.Header closeButton><p2>Add new job</p2></Modal.Header>\n                <Modal.Body>\n                        <p sytle={{color:'red'}}>{message}</p>\n                        <Form.Group>\n                            <Form.Label>Target Latitude:</Form.Label>\n                            <Form.Control name=\"lat\" ref={register()}></Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Target Longitude:</Form.Label>\n                            <Form.Control name=\"lon\" ref={register()}></Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Image Time (Local):</Form.Label>\n                            <div style={{color: 'black'}}>\n                                <Datetime onChange={onChangeDate} value={date} initialValue={moment()}/>\n                            </div>\n                        </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button type=\"submit\">Submit</Button>\n                </Modal.Footer>\n                </Form>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Schedule;","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Download.js",[],{"ruleId":"56","replacedBy":"57"},{"ruleId":"58","replacedBy":"59"},{"ruleId":"60","severity":1,"message":"61","line":2,"column":17,"nodeType":"62","messageId":"63","endLine":2,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":2,"column":38,"nodeType":"62","messageId":"63","endLine":2,"endColumn":48},{"ruleId":"60","severity":1,"message":"65","line":10,"column":8,"nodeType":"62","messageId":"63","endLine":10,"endColumn":14},{"ruleId":"60","severity":1,"message":"66","line":13,"column":10,"nodeType":"62","messageId":"63","endLine":13,"endColumn":17},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":1,"column":38,"nodeType":"62","messageId":"63","endLine":1,"endColumn":48},{"ruleId":"67","severity":1,"message":"68","line":24,"column":26,"nodeType":"69","messageId":"70","endLine":24,"endColumn":28},{"ruleId":"60","severity":1,"message":"64","line":1,"column":38,"nodeType":"62","messageId":"63","endLine":1,"endColumn":48},{"ruleId":"60","severity":1,"message":"71","line":14,"column":12,"nodeType":"62","messageId":"63","endLine":14,"endColumn":20},{"ruleId":"60","severity":1,"message":"72","line":14,"column":22,"nodeType":"62","messageId":"63","endLine":14,"endColumn":34},{"ruleId":"67","severity":1,"message":"68","line":23,"column":17,"nodeType":"69","messageId":"70","endLine":23,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":29,"column":17,"nodeType":"69","messageId":"70","endLine":29,"endColumn":19},{"ruleId":"67","severity":1,"message":"68","line":36,"column":17,"nodeType":"69","messageId":"70","endLine":36,"endColumn":19},{"ruleId":"60","severity":1,"message":"61","line":1,"column":17,"nodeType":"62","messageId":"63","endLine":1,"endColumn":26},{"ruleId":"60","severity":1,"message":"64","line":1,"column":38,"nodeType":"62","messageId":"63","endLine":1,"endColumn":48},{"ruleId":"60","severity":1,"message":"73","line":11,"column":9,"nodeType":"62","messageId":"63","endLine":11,"endColumn":12},"no-native-reassign",["74"],"no-negated-in-lhs",["75"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Button' is defined but never used.","'address' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'set' is defined but never used.","no-global-assign","no-unsafe-negation"]