[{"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/index.js":"1","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/App.js":"2","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/reportWebVitals.js":"3","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Connect.js":"4","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Main.js":"5","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Download.js":"6","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Schedule.js":"7","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Health.js":"8","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Test.js":"9"},{"size":500,"mtime":1620649735230,"results":"10","hashOfConfig":"11"},{"size":1285,"mtime":1620663525736,"results":"12","hashOfConfig":"11"},{"size":362,"mtime":1620647893662,"results":"13","hashOfConfig":"11"},{"size":3142,"mtime":1620710146812,"results":"14","hashOfConfig":"11"},{"size":2431,"mtime":1621256044211,"results":"15","hashOfConfig":"11"},{"size":1978,"mtime":1620662226461,"results":"16","hashOfConfig":"11"},{"size":5532,"mtime":1620664266318,"results":"17","hashOfConfig":"11"},{"size":2906,"mtime":1621256029907,"results":"18","hashOfConfig":"11"},{"size":5931,"mtime":1621256398046,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},"nvim0h",{"filePath":"23","messages":"24","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"22"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"22"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"22"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"22"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"40","messages":"41","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/index.js",[],["42","43"],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/App.js",["44","45","46","47"],"import './App.css';\nimport React, { useEffect, useState, useContext } from \"react\";\n\nimport 'bootswatch/dist/darkly/bootstrap.min.css';\n\nimport Connect from './components/Connect'\nimport Main from './components/Main'\n\nimport Navbar from 'react-bootstrap/Navbar'\nimport Button from 'react-bootstrap/Button'\n\nfunction App() {\n  const [address, setAddress] = useState(null);\n  return(\n    <div>\n    <Navbar bg=\"primary\" variant=\"dark\" sticky=\"top\">\n      <Navbar.Brand>MrWAM Mission Console</Navbar.Brand>\n      <Navbar.Collapse className=\"justify-content-end\">\n          {(sessionStorage.getItem('api-host') == null) &&\n            <Navbar.Text>\n            Not Connected\n            </Navbar.Text>\n          }\n          {(sessionStorage.getItem('api-host') != null) &&\n            <div>\n              <Navbar.Text style={{'marginRight': '2vh'}}>\n                Connected to {sessionStorage.getItem('api-host')}\n              </Navbar.Text>\n            </div>\n          }\n      </Navbar.Collapse>\n    </Navbar>\n    <div className=\"main\">\n\n    {(sessionStorage.getItem('api-host') == null) &&\n        <Connect setAddress={setAddress} />\n    }\n    {(sessionStorage.getItem('api-host') != null) &&\n      \n        <Main/>\n        \n      }\n\n    </div>\n    </div>\n  );\n}\n\nexport default App;\n","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/reportWebVitals.js",[],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Connect.js",["48","49","50"],"import React, { useEffect, useState, useContext } from \"react\";\n\n// boostrap components\nimport Container from 'react-bootstrap/Container'\nimport Jumbotron from 'react-bootstrap/Jumbotron'\nimport Form from 'react-bootstrap/Form'\nimport InputGroup from 'react-bootstrap/InputGroup'\nimport Button from 'react-bootstrap/Button'\nimport Modal from 'react-bootstrap/Modal'\n\nimport {useForm} from 'react-hook-form';\n\n\n\nfunction Connect(props) {\n\n    const {register, handleSubmit} = useForm();\n    const [modalState, setModalState] = useState({show: false, message: ''});\n    const handleHide = () => {\n        setModalState({show: false, message: modalState.message});\n    }\n\n    function checkConnect(data) {\n        if (data.address == '') {\n            return;\n        }\n        var address = data.address;\n        const requestOptions = {\n            method: 'GET', \n            headers: { 'Content-Type': 'application/json' }\n        };\n        if (address[address.length - 1] !== \"/\") {\n            address += \"/\";\n        }\n        console.log(address);\n        setModalState({show: true, message: 'Trying to connect...'});\n        fetch(address + 'check_connection', requestOptions).then(response => response.json()).then(data => {\n            if (data.success) {\n                setModalState({\n                    show:true, message: 'Connected to ' + address\n                });\n                sessionStorage.setItem('api-host', address);\n                props.setAddress(address);\n            }\n        }).catch(\n            error => {\n                setModalState({\n                    show: true, message: 'The following occurred while attempting to connect:\\n' + error\n                })\n            }\n        );   \n    };\n\n    return (\n        <Container>\n            <Jumbotron>\n                <h1>Connect</h1>\n                <p>Connect to a satellite on the local network via its IP.</p>\n                <h4 style={{marginTop: '2vh'}}>Local</h4>\n                <Form onSubmit={handleSubmit(checkConnect)}>\n                    <Form.Group>\n                        <Form.Label>Local Satellite Address</Form.Label>\n                        <InputGroup>\n                            <Form.Control name=\"address\" ref={register()} ></Form.Control>\n                        </InputGroup>\n                    </Form.Group>\n                    <Button type=\"submit\">Connect</Button>\n                </Form>\n                <h3>\n                    <center>or</center>\n                </h3>\n                <h4 style={{marginTop: '2vh'}}>Demo Satellite</h4>\n                <p>\n                You can connect to a demo satellite via the internet.\n                </p>\n                <Button onClick={() => checkConnect({address:'https://mrwam-backend.herokuapp.com/'})}>\n                    Connect to Demo Satellite\n                </Button>\n            </Jumbotron>\n            <Modal show={modalState.show} onHide={handleHide} closeButton>\n                <Modal.Header>Information</Modal.Header>\n                <Modal.Body>{modalState.message}</Modal.Body>\n            </Modal>\n        </Container>\n    );\n}\n\nexport default Connect;","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Main.js",["51","52","53","54","55","56"],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Download.js",[],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Schedule.js",["57","58","59"],"import React, { useEffect, useState, useContext } from \"react\";\nimport Button from 'react-bootstrap/Button';\nimport Table from 'react-bootstrap/Table';\nimport moment from 'moment-timezone';\nimport Modal from 'react-bootstrap/Modal'\nimport Form from 'react-bootstrap/Form'\n\nimport Datetime from 'react-datetime';\nimport \"react-datetime/css/react-datetime.css\";\n\nimport {set, useForm} from 'react-hook-form';\n\n\nfunction Schedule(props) {\n    var schedule = props.schedule;\n    const {register, handleSubmit} = useForm();\n    const [date, onChangeDate] = useState(moment());\n    const [display, setDisplay] = useState(false);\n    const [message, setMessage] = useState('');\n\n    function submit(data) {\n        const requestOptions = {\n            method: 'POST',\n            headers: { 'Content-Type': 'application/json' },\n            body: JSON.stringify({lat: data.lat, lon: data.lon, time: date / 1000})\n        }\n        fetch(sessionStorage.getItem('api-host')+'add_job', requestOptions).then(response => response.json()).then((data)=>{\n            if (data.success) {\n                props.setRefresh(!props.refresh)\n                setDisplay(false);\n            } else {\n                setMessage(data.message);\n            }\n        })\n    }\n\n\n    return(\n        <div>\n                <h2>Job Schedule</h2>\n                {(schedule != null) &&\n                    <div>\n                    <Table striped bordered >\n                        <thead>\n                            <tr>\n                                <th>Job ID</th>\n                                <th>Target Latitude</th>\n                                <th>Target Longitude</th>\n                                <th>Imaging Time (Local Time)</th>\n                                <th>Completed</th>\n                                <th></th>\n                                <th></th>\n                            </tr>\n                        </thead>\n                        <tbody>\n                            {schedule.list.map((e, i) => {\n                                return(\n                                <tr key={i}>\n                                    <td>{e.id}</td>\n                                    <td>{e.lat}</td>\n                                    <td>{e.lon}</td>\n                                    <td>{moment.unix(e.time).format(\"DD/MM/YYYY HH:mm:ss\")}</td>\n                                    <td>\n                                        <p style={e.completed?{color: \"Green\"}:{color:\"Red\"}}>\n                                            {e.completed ? \"Yes\" : \"No\"}\n                                        </p>\n                                    </td>\n                                    <td>\n                                        <Button disabled={!e.completed} onClick={()=>{\n                                            window.open(sessionStorage.getItem('api-host')+'download?'+\n                                                new URLSearchParams({name: e.image_name})\n                                            );\n                                        }}>\n                                            Download Image\n                                        </Button>\n                                    </td>\n                                    <td>\n                                        <Button variant=\"danger\" onClick={()=>{\n                                            fetch(sessionStorage.getItem('api-host')+'delete_job?'+\n                                                new URLSearchParams({id: e.id})\n                                            ).then(props.setRefresh(!props.refresh));\n                                        }}>\n                                            Delete\n                                        </Button>\n                                    </td>\n                                </tr>\n                                );\n                            })\n                            }\n                            \n                        </tbody>\n                    </Table>\n                    <Button onClick={()=>{setDisplay(true)}}>\n                            Add\n                    </Button>\n                    </div>\n                }\n            <Modal show={display} onHide={()=>{setDisplay(false)}}>\n                <Form onSubmit={handleSubmit(submit)}>\n                <Modal.Header closeButton><p2>Add new job</p2></Modal.Header>\n                <Modal.Body>\n                        <p sytle={{color:'red'}}>{message}</p>\n                        <Form.Group>\n                            <Form.Label>Target Latitude:</Form.Label>\n                            <Form.Control name=\"lat\" ref={register()}></Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Target Longitude:</Form.Label>\n                            <Form.Control name=\"lon\" ref={register()}></Form.Control>\n                        </Form.Group>\n                        <Form.Group>\n                            <Form.Label>Image Time (Local):</Form.Label>\n                            <div style={{color: 'black'}}>\n                                <Datetime onChange={onChangeDate} value={date} initialValue={moment()}/>\n                            </div>\n                        </Form.Group>\n                </Modal.Body>\n                <Modal.Footer>\n                    <Button type=\"submit\">Submit</Button>\n                </Modal.Footer>\n                </Form>\n            </Modal>\n        </div>\n    );\n}\n\nexport default Schedule;","/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Health.js",[],"/home/darentang/uni/AERO4701/sat_lib/comms/frontend/mrwam-console/src/components/Test.js",["60"],{"ruleId":"61","replacedBy":"62"},{"ruleId":"63","replacedBy":"64"},{"ruleId":"65","severity":1,"message":"66","line":2,"column":17,"nodeType":"67","messageId":"68","endLine":2,"endColumn":26},{"ruleId":"65","severity":1,"message":"69","line":2,"column":38,"nodeType":"67","messageId":"68","endLine":2,"endColumn":48},{"ruleId":"65","severity":1,"message":"70","line":10,"column":8,"nodeType":"67","messageId":"68","endLine":10,"endColumn":14},{"ruleId":"65","severity":1,"message":"71","line":13,"column":10,"nodeType":"67","messageId":"68","endLine":13,"endColumn":17},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"69","line":1,"column":38,"nodeType":"67","messageId":"68","endLine":1,"endColumn":48},{"ruleId":"72","severity":1,"message":"73","line":24,"column":26,"nodeType":"74","messageId":"75","endLine":24,"endColumn":28},{"ruleId":"65","severity":1,"message":"69","line":1,"column":38,"nodeType":"67","messageId":"68","endLine":1,"endColumn":48},{"ruleId":"65","severity":1,"message":"76","line":15,"column":12,"nodeType":"67","messageId":"68","endLine":15,"endColumn":20},{"ruleId":"65","severity":1,"message":"77","line":15,"column":22,"nodeType":"67","messageId":"68","endLine":15,"endColumn":34},{"ruleId":"72","severity":1,"message":"73","line":24,"column":17,"nodeType":"74","messageId":"75","endLine":24,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":30,"column":17,"nodeType":"74","messageId":"75","endLine":30,"endColumn":19},{"ruleId":"72","severity":1,"message":"73","line":37,"column":17,"nodeType":"74","messageId":"75","endLine":37,"endColumn":19},{"ruleId":"65","severity":1,"message":"66","line":1,"column":17,"nodeType":"67","messageId":"68","endLine":1,"endColumn":26},{"ruleId":"65","severity":1,"message":"69","line":1,"column":38,"nodeType":"67","messageId":"68","endLine":1,"endColumn":48},{"ruleId":"65","severity":1,"message":"78","line":11,"column":9,"nodeType":"67","messageId":"68","endLine":11,"endColumn":12},{"ruleId":"65","severity":1,"message":"79","line":5,"column":18,"nodeType":"67","messageId":"68","endLine":5,"endColumn":26},"no-native-reassign",["80"],"no-negated-in-lhs",["81"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'useContext' is defined but never used.","'Button' is defined but never used.","'address' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'register' is assigned a value but never used.","'handleSubmit' is assigned a value but never used.","'set' is defined but never used.","'useFrame' is defined but never used.","no-global-assign","no-unsafe-negation"]